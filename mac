#!/bin/sh
map_editor=/mn/stornext/u3/hke/owl/quiet_svn/oslo/src/f90/map_editor/map_editor
mypwd=$PWD
dx11dir="like/dx11d2"
dx12dir="like/dx12"
npipedir="like/npipe4v203"
if [[ $mypwd == *"$npipedir" ]]; then
  mapname=npipe
elif [[ $mypwd == *"$dx12dir" ]]; then
  mapname=dx12
elif [[ $mypwd == *"$dx11dir" ]]; then
  mapname=dx11
else
  echo "You are doing it wrong, please move to the correct directories:"
  echo "~/like/npipe4v2032, ~/like/dx11d2 or ~/like/dx12"
  exit
fi

show_menu(){
    clear
    echo -e "\033[33m"
    echo $'                         \e[38;5;94m|'
    echo $'                         |'
    echo $'                         |'
    echo $'                 |       |'
    echo $'                 |      ---'
    echo $'                ---     \'-\''
    echo $'                \'-\'  \e[0m____\e[38;5;94m|\e[0m_____'
    echo $'             ____|\e[0m__/    \e[38;5;94m|\e[0m    /'
    echo $'           \e[0m /    \e[38;5;94m|\e[0m /     \e[38;5;94m|  \e[0m /'
    echo $'           \e[0m/     \e[38;5;94m|\e[0m(      \e[38;5;94m|  \e[0m('
    echo $'         \e[0m (      \e[38;5;94m| \e[0m\\     \e[38;5;94m|   \e[0m\\'
    echo $'           \e[0m\\     \e[38;5;94m|\e[0m  \\____\e[38;5;94m|\e[0m_____\\  /|'
    echo $'           \e[0m/\\____\e[38;5;94m|\e[0m___`---\e[38;5;94m.\e[0m----` .\' |'
    echo $'       \e[0m.-\'/      \e[38;5;94m|\e[0m  \\    \e[38;5;94m|\e[0m__.--\'    \\'
    echo $'     \e[0m.\'/ (       \e[38;5;94m|\e[0m   \\   \e[38;5;94m|\e[0m.          \\'
    echo $'  \e[38;5;94m_\e[0m /_/   \\      \e[38;5;94m|\e[0m    \\  \e[38;5;94m|\e[0m `.         \\'
    echo $'   \e[38;5;94m`-.\'\e[0m    \\.--._\e[38;5;94m|\e[0m.---`  \e[38;5;94m|\e[0m   `-._______\\'
    echo $'      \e[38;5;94m``-.-------\'\e[38;5;94m-------\'\e[38;5;94m------------/'
    echo $'          \e[38;5;94m`\'._______________________.\'      '
    echo $'\e[94m###########################################'
    echo "                Welcome to "
    echo "            MASTER & COMMANDER"
    echo "      a commander initialization tool"
    echo "        for Trygves master thesis"
    echo $'###########################################\e[0m'
    echo "-------------------------------------------"
    echo "            M A I N - M E N U"
    echo "-------------------------------------------"
    echo "            loaded for $mapname"
    echo "..........................................."

    NORMAL=`echo "\033[m"`
    MENU=`echo "\033[36m"` #Blue
    NUMBER=`echo "\033[33m"` #yellow
    FGRED=`echo "\033[41m"`
    RED_TEXT=`echo "\033[31m"`
    ENTER_LINE=`echo "\033[33m"`
    echo " 1) Look at previous COMMANDER runs."
    echo " 2) Create new parameter file and run. "
    echo " 3) Map editing"
    #echo " 4) Nothing"
    #echo " 5) Nothing"
    echo "..........................................."
    echo "        Enter your choice [ 1 - 4 ]"
    echo "    <ENTER> to go to menu or x to exit"
    read opt

  while [ opt != '' ]
  do
    if [[ $opt = "" ]]; then
      show_menu;
    else
      case $opt in
      1) clear; # ------------- See previous runs -----------
      option_picked "Option 1 Picked"
      sub_menu1;
      ;;

      2) clear; # ------------- Initialize COMMANDER -----------
      option_picked "Initialize COMMANDER";
      ls -d chains*/
      #read -p "Map name: [ex. npipe]: " mapname
      echo "(If test, write test)"
      read -p "New version number [xx.xx]: " newver
      read -p "Base parameter file on version [xx.xx]: " oldver
      #New chain folder
      mkdir chains_ml_"$mapname"_v"$newver"

      # -------- Edit chains folder and input gain file --------
      oldparam=param_ml_tls_"$mapname"_v"$oldver".txt
      inparam=param_ml_tls_"$mapname"_v"$newver".txt
      cp -n $oldparam $inparam

      sed -i "s/chains_ml_"$mapname"_v"$oldver"/chains_ml_"$mapname"_v"$newver"/g" $inparam
      sub_menu2;
      ;;

      3) clear;
      #option_picked "Option 3 Picked";
      sub_menu3;
      ;;

      #4) clear;
      #option_picked "Option 4 Picked";
      #show_menu;
      #;;
      #5) clear;
      #option_picked "Sub Menu 1";
      #show_menu;
      #;;

      x)exit;
      ;;


      \n) clear;
      show_menu;
      ;;

      *)clear;
      option_picked "Pick an option from the menu";
      show_menu;
      ;;
      esac
    fi
  done
}

function option_picked() {
    COLOR='\033[01;31m' # bold red
    RESET='\033[00;00m' # normal white
    MESSAGE=${@:-"${RESET}Error: No message passed"}
    echo -e "${COLOR}${MESSAGE}${RESET}"
}
sub_menu1(){
    clear
    echo "-------------------------------------------"
    echo "        See previous COMMANDER runs "
    echo "-------------------------------------------"
    echo "1) Overview of of chain-folders."
    echo "2) See fg_ind_mean-files."
    echo "3) See gain_init-files."
    echo "4) List all chains-directories."
    echo "5) Read parameter files."
    read -p "Enter your choice [ 1 - 5] " sub1
  while [ sub1 != '' ]
  do
    if [[ $sub1 = "" ]]; then
      show_menu;
    else

      case $sub1 in
        1) clear; # ------------- Show chainlog file -----------
        echo "Registering fg files"
        chainfolders=chains_ml_"$mapname"_v*
        D=$'\e'
        for i in $chainfolders;
        do
          s="${i}r"  #Changed delimiter (sed wont work with / in string)
          #result=$( sed '9q;d' "$i"/fg_ind_mean_no0001.dat )
          result=$( tail -n 1 "$i"/fg_ind_mean_no0001.dat )
          sed -i "s${D}.*${s}.*${D}${s}${result}${D}g" chainlog_"$mapname".txt

        done
        echo "fg_ind_mean values registered to chainlog_"$mapname".txt"

        more chainlog_"$mapname".txt

        read -p "Press [Enter] key to continue..." readEnterKey
        sub_menu1;
        ;;

        2) clear;# ------------- Show fg_ind_mean file -----------
        echo "Displaying fg_ind_mean_no0001.dat"
        #read -p "Map name [ex. npipe]: " mapn
        read -p "Which version(s) [ex. 5.1 5.2]: " versions
        read -p "Which sample? If all press enter: " sampl
        for i in $versions;
        do
          echo "Version: " $i;
          if [[ $sampl ]]; then
            sampl=$(($sampl + 1))
            sed -n 1p chains_ml_"$mapname"_v"$i"/fg_ind_mean_no0001.dat;
            sed -n "$sampl"p chains_ml_"$mapname"_v"$i"/fg_ind_mean_no0001.dat;
            sampl=$(($sampl - 1))
          else
            cat chains_ml_"$mapname"_v"$i"/fg_ind_mean_no0001.dat;
          fi
        done

        read -p "Press [Enter] key to continue..." readEnterKey
        sub_menu1;
        ;;

        3) clear;# ------------- Show gain_init file -----------
        echo "Displaying gain_init_dx12_n0256_40arcmin_ik102_v?.dat"
        read -p "Which version(s) [ex. 5.1 5.2]: " versions
        for i in $versions;
        do
          cat gain_init_dx12_n0256_40arcmin_ik102_v$i.dat;
        done
        read -p "Press [Enter] key to continue..." readEnterKey
        sub_menu1;
        ;;

        4) clear;# ------------- List all chains directories -----------
        ls -d chains*/
        read -p "Press [Enter] key to continue..." readEnterKey
        sub_menu1;

        ;;

        5) # ----------- Read parameter files -------------
        read -p "Parameter file version number: " ver
        more chains_ml_"$mapname"_v"$ver"/param_ml_tls_"$mapname"_v"$ver".txt
        sub_menu1;
        ;;
        \n)
        show_menu1;
        ;;

        x)exit;
        ;;

      esac

    fi
  done
}
sub_menu2(){
    clear
    echo "-------------------------------------------"
    echo "             New COMMANDER run"
    echo "-------------------------------------------"
    echo "   Creating param_ml_tls_"$mapname"_v"$newver".txt"
    echo "   Based on param_ml_tls_"$mapname"_v"$oldver".txt"
    echo "..........................................."
    if [[ $gain857 ]]; then
    echo "1) * Gain changed to 545: $gain545, 857: $gain857."
    else
    echo "1) Modify input gain."
    fi

    if [[ $gibbsiter ]]; then
    echo "2) * Number of iterations changed to $gibbsiter."
    else
    echo "2) Change number of gibbs iterations."
    fi

    if [[ $numproc ]]; then
    echo "3) * Number of processors changed to $procs."
    else
    echo "3) Change number of processors per band."
    fi

    echo "4) Change priors."
    if [[ $dusttemp ]]; then
    echo "    a) * Dust temp = $dusttemp."
    else
    echo "    a) Change dust temp."
    fi
    if [[ $synchbeta ]]; then
    echo "    b) * Synch beta = $synchbeta."
    else
    echo "    b) Change synch beta."
    fi
    if [[ $co217 ]]; then
    echo "    c) * CO 217 = $co217."
    else
    echo "    c) Change 217 CO."
    fi
    if [[ $co353 ]]; then
    echo "    d) * CO 353 = $co353."
    else
    echo "    d) Change 353 CO."
    fi

    echo "5) Mono-dipole stuff."
    if [[ $dipoleinit ]]; then
    echo "    a) * MD_init adjusted to 0."
    else
    echo "    a) Change MD_init-file."
    fi

    if [[ $mdcor ]]; then
    echo "    b) * Mono-dipole correction completed."
    else
    echo "    b) Mono-dipole correction. (So far only for npipe)"
    fi



    if [[ $cont ]]; then
    echo "6) * Starting from sample $cont."
    else
    echo "6) Continue a previous run."
    fi

    echo "7) Modify input maps."
    echo "    a) List input maps in parameter file."
    echo "    b) Change input maps in parameter file."
    echo "8) Read parameter file."
    echo "9) Run COMMANDER."
    read -p "Enter your choice [ 1 - 9 ] " sub1

  while : #[ sub1 != '' ]
  do
    if [[ $sub1 = "" ]]; then
      show_menu;
    else

      case $sub1 in

      1) # -------- Modify gain --------
      sed -i "s/gain_init_dx12_n0256_40arcmin_ik102_v"$oldver"/gain_init_dx12_n0256_40arcmin_ik102_v"$newver"/g" $inparam

      newgain=gain_init_dx12_n0256_40arcmin_ik102_v"$newver".dat
      read -p "545 GHz gain: " gain545
      read -p "857 GHz gain: " gain857
      cat > $newgain <<DELIM
      #    Sample    030           044           070           100           143           217           353           545           857
        1000      1.000000      1.000000      1.000000      1.000000      1.000000      1.000000      1.000000      $gain545      $gain857
DELIM
      sub_menu2;
      ;;
      2) # ------------ Modify iterations -------------
      sed -n -e "s/^\(NUM_GIBBS_ITER\)/\1/p" $inparam
      read -p "Number of Gibbs iterations: " gibbsiter
      if [[ $gibbsiter ]]; then
        sed -i 's,^\(NUM_GIBBS_ITER[ ]*= \).*,\1'$gibbsiter' \# Length of one Markov chain,g' $inparam
      fi
      sub_menu2;
      ;;
      3) # ------------ Modify number of processors ------
      sed -n -e "s/^\(NUM_PROC_PER_BAND\)/\1/p" $inparam
      read -p "Number of processors per band: " numproc
      if [[  $numproc ]]; then
        procs=$((9 * $numproc))
      else
        procs=9
      fi
      echo "Total number of processors needed: $procs"
      if [[ $numproc ]]; then
        sed -i 's,^\(NUM_PROC_PER_BAND[ ]*= \).*,\1'$numproc' \# Number of processors per band,g' $inparam
      fi
      read -p "Press [Enter] key to continue..." readEnterKey
      sub_menu2;
      ;;
      4)
      echo "Please choose 4a-d in main menu."
      read -p "Press [Enter] key to continue..." readEnterKey
      sub_menu2;
      ;;
      4a) # ------------- Change priors -----------
      sed -n -e "s/^\(DUST_TEMP_PRIOR_GAUSSIAN_STDDEV01\)/\1/p" $inparam
      read -p "New dust temp prior stddev: " dusttemp
      if [[ $dusttemp ]]; then
        sed -i 's,^\(DUST_TEMP_PRIOR_GAUSSIAN_STDDEV01[ ]*= \).*,\1'$dusttemp',g' $inparam
      fi
      sub_menu2;
      ;;

      4b) # ------------ Change Synch beta prior ------------
      sed -n -e "s/^\(BETA_PRIOR_GAUSSIAN_STDDEV02\)/\1/p" $inparam
      read -p "New synch beta prior stddev: " synchbeta
      if [[ $synchbeta ]]; then
        sed -i 's,^\(BETA_PRIOR_GAUSSIAN_STDDEV02[ ]*= \).*,\1'$synchbeta',g' $inparam
      fi
      ;;

      4c) # ------------- Change 217 CO prior -----------
      sed -n -e "s/^\(CO_PRIOR_GAUSSIAN_STDDEV03_01\)/\1/p" $inparam
      read -p "New 217 CO prior stddev: " co217
      if [[ $co217 ]]; then
        sed -i 's,^\(CO_PRIOR_GAUSSIAN_STDDEV03_01[ ]*= \).*,\1'$co217',g' $inparam
      fi
      sub_menu2;
      ;;

      4d) # ------------- Change 353 CO prior -----------
      sed -n -e "s/^\(CO_PRIOR_GAUSSIAN_STDDEV03_02\)/\1/p" $inparam
      read -p "New 353 CO prior stddev: " co353
      if [[ $co353 ]]; then
        sed -i 's,^\(CO_PRIOR_GAUSSIAN_STDDEV03_02[ ]*= \).*,\1'$co353',g' $inparam
      fi
      sub_menu2;
      ;;
      5) # ------------- MD-stuff -----------
      echo "Please choose 5a-b in main menu."
      read -p "Press [Enter] key to continue..." readEnterKey
      sub_menu2;
      ;;
      5a) # ------------- Change MD init -----------
      echo "Change mono-dipole init file"
      echo "1. for 0"
      echo "2. for dx12 values"
      read -p "" ans
      if [[ $ans -eq 1 ]]; then
        sed -i "s,^\(TEMPLATE_AMP_INPUT[ ]*= \).*,\1md_init_dx12_n0256_40arcmin_ik102_v7.dat,g" $inparam #Dust beta
      elif [[ $ans -eq 2 ]]; then
        sed -i "s,^\(TEMPLATE_AMP_INPUT[ ]*= \).*,\1md_init_dx12_n0256_40arcmin_ik102.dat,g" $inparam #Dust beta
      else
        echo "No value entered."
        ans=
        read -p "Press [Enter] key to continue..." readEnterKey
      fi
      sub_menu2;
      ;;

      5b) clear; # ------------- Do MD-correction -----------
      mdcor="$(mdcorrector | tail -1)"
      exit
      sub_menu2;
      ;;


      6) # -------- Continue Previous run ---------
      read -p "Which run to base on? [ex. 5.5] " base
      read -p "Continue from sample number (#####):" cont
      if [[ $cont ]]; then
        cp chains_ml_"$mapname"_v"$base"/temp_amp_c0001_k"$cont".dat temp_amp_init_v"$newver".dat
        sed -i "s,^\(TEMPLATE_AMP_INPUT[ ]*= \).*,\1temp_amp_init_v"$newver".dat,g" $inparam #Mono_dipole

        cp chains_ml_"$mapname"_v"$base"/gain_no0001.dat gain_init_v"$newver".dat
        sed -i "s,^\(GAIN_INIT[ ]*= \).*,\1gain_init_v"$newver".dat,g" $inparam #Gain init

        cp chains_ml_"$mapname"_v"$base"/bp_no0001.dat bp_init_v"$newver".dat
        sed -i "s,^\(BANDPASS_INIT[ ]*= \).*,\1bp_init_v"$newver".dat,g" $inparam #Bandpass init

        cp chains_ml_"$mapname"_v"$base"/dust_beta_c0001_k"$cont".fits dust_beta_init_v"$newver".fits
        sed -i "s,^\(INIT_INDEX_MAP01_01[ ]*= \).*,\1dust_beta_init_v"$newver".fits,g" $inparam #Dust beta

        cp chains_ml_"$mapname"_v"$base"/dust_Td_c0001_k"$cont".fits dust_Td_init_v"$newver".fits
        sed -i "s,^\(INIT_INDEX_MAP01_02[ ]*= \).*,\1dust_Td_init_v"$newver".fits,g" $inparam #Dust Td

        cp chains_ml_"$mapname"_v"$base"/dust_c0001_k"$cont".fits dust_init_v"$newver".fits
        sed -i "s,^\(INITIAL_AMPLITUDE_MAP01[ ]*= \).*,\1dust_init_v"$newver".fits,g" $inparam #Dust

        cp chains_ml_"$mapname"_v"$base"/synch_beta_c0001_k"$cont".fits synch_beta_init_v"$newver".fits
        sed -i "s,^\(INIT_INDEX_MAP02_01[ ]*= \).*,\1synch_beta_init_v"$newver".fits,g" $inparam #synch beta

        cp chains_ml_"$mapname"_v"$base"/synch_c0001_k"$cont".fits synch_init_v"$newver".fits
        sed -i "s,^\(INITIAL_AMPLITUDE_MAP02[ ]*= \).*,\1synch_init_v"$newver".fits,g" $inparam #synch

        cp chains_ml_"$mapname"_v"$base"/co_c0001_k"$cont".fits co_init_v"$newver".fits
        sed -i "s,^\(INITIAL_AMPLITUDE_MAP03[ ]*= \).*,\1co_init_v"$newver".fits,g" $inparam #CO

        cp chains_ml_"$mapname"_v"$base"/co_217_c0001_k"$cont".fits co_217_init_v"$newver".fits
        sed -i "s,^\(INIT_INDEX_MAP03_01[ ]*= \).*,\1co_217_init_v"$newver".fits,g" $inparam #co 217

        cp chains_ml_"$mapname"_v"$base"/co_353_c0001_k"$cont".fits co_353_init_v"$newver".fits
        sed -i "s,^\(INIT_INDEX_MAP03_02[ ]*= \).*,\1co_353_init_v"$newver".fits,g" $inparam #co 353

        cp chains_ml_"$mapname"_v"$base"/cmb_c0001_k"$cont".fits cmb_init_v"$newver".fits
        sed -i "s,^\(INITIAL_AMPLITUDE_MAP04[ ]*= \).*,\1cmb_init_v"$newver".fits,g" $inparam #CMB

        read -p "New input-maps? Map correction keyword: [ex. MDCOR1] (Only npipe) " nc
        if [[ $nc ]]; then
          sed -i "s,^\(MAP01_0001[ ]*= \).*,\1map_npipe4v207_v1_030_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
          sed -i "s,^\(MAP02_0001[ ]*= \).*,\1map_npipe4v207_v1_044_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
          sed -i "s,^\(MAP03_0001[ ]*= \).*,\1map_npipe4v207_v1_070_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
          sed -i "s,^\(MAP04_0001[ ]*= \).*,\1map_npipe4v205_v1_100_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
          sed -i "s,^\(MAP05_0001[ ]*= \).*,\1map_npipe4v205_v1_143_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
          sed -i "s,^\(MAP06_0001[ ]*= \).*,\1map_npipe4v205_v1_217_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
          sed -i "s,^\(MAP07_0001[ ]*= \).*,\1map_npipe4v205_v1_353_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
          sed -i "s,^\(MAP08_0001[ ]*= \).*,\1map_npipe4v205_v1_545_2_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
          sed -i "s,^\(MAP09_0001[ ]*= \).*,\1map_npipe4v205_v1_857_2_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
        fi

      fi
      sub_menu2;
      ;;
      7)
      echo "Please choose 5a-b in main menu."
      read -p "Press [Enter] key to continue..." readEnterKey
      sub_menu2;
      ;;

      7a) #-------- List all input maps ---------
      echo "Input maps in $inparam"
      for i in {1..9};
      do
      sed -n -e "s/^.*\(MAP0"$i"_0001\)/\1/p" $inparam
      done
      read -p "Press [Enter] key to continue..." readEnterKey
      #more $inparam
      sub_menu2;
      ;;

      7b) clear;
      echo "Change input maps"
      ls map*.fits

      read -p "New input map keyword: [ex. MDCOR]" nc
      if [[ $nc ]]; then
        sed -i "s,^\(MAP01_0001[ ]*= \).*,\1map_npipe4v207_v1_030_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
        sed -i "s,^\(MAP02_0001[ ]*= \).*,\1map_npipe4v207_v1_044_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
        sed -i "s,^\(MAP03_0001[ ]*= \).*,\1map_npipe4v207_v1_070_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
        sed -i "s,^\(MAP04_0001[ ]*= \).*,\1map_npipe4v205_v1_100_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
        sed -i "s,^\(MAP05_0001[ ]*= \).*,\1map_npipe4v205_v1_143_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
        sed -i "s,^\(MAP06_0001[ ]*= \).*,\1map_npipe4v205_v1_217_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
        sed -i "s,^\(MAP07_0001[ ]*= \).*,\1map_npipe4v205_v1_353_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
        sed -i "s,^\(MAP08_0001[ ]*= \).*,\1map_npipe4v205_v1_545_2_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
        sed -i "s,^\(MAP09_0001[ ]*= \).*,\1map_npipe4v205_v1_857_2_0256_40arcmin_full_"$nc".fits,g" $inparam #CMB
      fi
      sub_menu2;
      ;;

      8) clear; #--------- Read parameter file ---------
      more $inparam
      sub_menu2;
      ;;
      9) # -------- RUN COMMANDER ---------
      # Put description of run
      read -p "Describe this run: " description
      echo "################## chains_ml_"$mapname"_"$newver" ##################" >> chainlog_"$mapname".txt
      echo "############## $inparam ############## " >> chainlog_"$mapname".txt
      echo "Based on $oldparam" >> chainlog_"$mapname".txt
      echo "545 gain: $gain545, 857 gain: $gain857" >> chainlog_"$mapname".txt

      if [[ $gibbsiter ]]; then
        echo "Gibbs iterations: $gibbsiter" >> chainlog_"$mapname".txt
      else
        sed -n -e "s/^\(NUM_GIBBS_ITER\)/\1/p" $inparam >> chainlog_"$mapname".txt
      fi

      if [[ $dusttemp ]]; then
        echo "Dust temp stddev: $dusttemp" >> chainlog_"$mapname".txt
      else
        sed -n -e "s/^\(DUST_TEMP_PRIOR_GAUSSIAN_STDDEV01\)/\1/p" $inparam >> chainlog_"$mapname".txt
      fi

      if [[ $synchbeta ]]; then
        echo "Synch beta stddev: $synchbeta" >> chainlog_"$mapname".txt
      else
        sed -n -e "s/^\(BETA_PRIOR_GAUSSIAN_STDDEV02\)/\1/p" $inparam >> chainlog_"$mapname".txt
      fi
      if [[ $co217 ]]; then
        echo "CO 217 stddev: $co217" >> chainlog_"$mapname".txt
      else
        sed -n -e "s/^\(CO_PRIOR_GAUSSIAN_STDDEV03_01\)/\1/p" $inparam >> chainlog_"$mapname".txt
      fi

      if [[ $co353 ]]; then
        echo "CO 353 stddev: $co353" >> chainlog_"$mapname".txt
      else
        sed -n -e "s/^\(CO_PRIOR_GAUSSIAN_STDDEV03_02\)/\1/p" $inparam >> chainlog_"$mapname".txt
      fi

      echo "Description: " >> chainlog_"$mapname".txt
      echo "$description" >> chainlog_"$mapname".txt

      if [[ $numproc ]]; then
        read -p "Run commander on $procs processors, GO?" readEnterKey
      else
        echo "Line in param_ml_tls_"$mapname"_v"$oldver".txt: "
        sed '18q;d' param_ml_tls_"$mapname"_v"$oldver".txt
        read -p "Wanted number of processors per band: " numproc
        procs=$((9 * $numproc))
        read -p "Run COMMANDER on $procs processors, GO?" readEnterKey
      fi
      cp param_ml_tls_"$mapname"_v"$newver".txt chains_ml_"$mapname"_v"$newver"/
      sed -i "1s/^/chains_ml_"$mapname"_v"$newver"r\n/" chainlog_"$mapname".txt # Add the chains folder to top of log
      mpirun -n "$procs" /uio/hume/student-u68/trygvels/master/Commander/commander1/src/commander/commander param_ml_tls_"$mapname"_v"$newver".txt 2>&1 | tee chains_ml_"$mapname"_v"$newver"/slurm.txt
      show_menu;
      ;;

      x) #--- exit ---
      echo "Bye!"
      exit 0
      ;;

      \n)
      show_menu;
      ;;

      *)
      echo "Error: Invalid option..."
      read -p "Press [Enter] key to continue..." readEnterKey
      sub_menu2;
      ;;
      esac

    fi
  done
}
sub_menu3(){
    clear
    echo "-------------------------------------------"
    echo "                Edit Maps"
    echo "-------------------------------------------"
    echo "1) Smooth npipe to 256."

    read -p "Enter your choice [ 1 - 2 ] " sub1
  while [ sub1 != '' ]
  do
    if [[ $sub1 = "" ]]; then
      show_menu;
    else

      case $sub1 in
        1)  # ------------ Smooth maps -----------
        echo "not finished"
        exit
        echo ${bsize[$b]} ${nside[$b]} ${outset[$s]} ${infreq[$f]}

        prefix=("npipe4v207_v1" "npipe4v205")
        rfill="10"

        read -p "Frequencies: [30 44 70 ...] " infreq

        bsize=(40)
        nside=(0256)
        lmax=(768)

        outset=(full)
        inset=(full)
        map_editor dipole_CMB.fits 0 768 256 beam_40arcmin.fits 40 dipole_CMB_n0256.fits

        for (( b=0; b<${#bsize[@]}; b++ )); do
          for (( s=0; s<${#prefix[@]}; s++ )); do
            for (( f=0; f<${#infreq[@]}; f++ )); do
              $map_editor smooth f2g
              dipole_CMB.fits \
              0 ${lmax[$b]} ${nside[$b]} \
              beam_dx12_${infreq[$f]%%_*}x${infreq[$f]%%_*}_extended_npipe4.fits ${bsize[$b]} \
              dipole_CMB_n0256.fits \
              ${rfill}
            done
          done
        done

        read -p "Press [Enter] key to continue..." readEnterKey
        sub_menu3;
        ;;

        2) # ------------- Show fg_ind_mean file -----------


        ;;
        \n)
        show_menu1;
        ;;

        x)exit;
        ;;

      esac

    fi
  done
}

clear
show_menu
#lol
