#!/bin/bash

if [ "$1" = help ] || [ $# -ne 1 ];then
    echo ""
    echo "input npipe version with initialization."
    echo "i.e. 'print_npipe_fullres_stats_to_file [npipe version]'"
    echo ""
fi

npipe=$1
me=/mn/stornext/u3/krisjand/quiet_svn/oslo/src/f90/map_editor/map_editor
mask_dir=/mn/stornext/u3/krisjand/stornext/npipe_highres/data_npipe/
freqs=("030" "044" "070" "100" "143" "217" "353" "545" "857")

zodi_file=npipe${npipe}_zodicor_stats.dat 
rms_file=npipe${npipe}_rms_stats.dat 
mask_file=npipe${npipe}_mask_stats.dat 

echo "# This is a screen print of map_editor print_stats for npipe"$npipe" maps" 


for ((i=0; i<${#freqs[@]}; i++)) ; do 
    freq=${freqs[$i]} #Frequency
    echo "printing frequency "$freq

    if [ ${freq} -lt 100 ]; then
	nside=1024
    else
	nside=2048
    fi

    for inputmap in "npipe"${npipe}*${freq}*"ZODICOR"*".fits"; do 
	if [[ $inputmap = *\** ]]; then #Check if contains wildcard (Map does not exist)
	    echo "WARNING: " $inputmap " does not exist!" 
	    continue
	fi
	echo "#---------------------------------------------------" 
	echo "# Stats for "$inputmap 
	echo "#---------------------------------------------------" 
	$me print_stats $inputmap ${mask_dir}mask_fullsky_n${nside}_tqu.fits 
	echo "" 

    done

    for inputmap in "npipe"${npipe}*${freq}*"rms"*".fits"; do 
	if [[ $inputmap = *\** ]]; then #Check if contains wildcard (Map does not exist)
	    echo "WARNING: " $inputmap " does not exist!" 
	    continue
	fi
	echo "#---------------------------------------------------"
	echo "# Stats for "$inputmap 
	echo "#---------------------------------------------------" 
	$me print_stats $inputmap ${mask_dir}mask_fullsky_n${nside}_tqu.fits 
	echo "" 

    done

    for inputmap in "npipe"${npipe}*${freq}*"mask"*".fits"; do 
	if [[ $inputmap = *\** ]]; then #Check if contains wildcard (Map does not exist)
	    echo "WARNING: " $inputmap " does not exist!" 
	    continue
	fi
	echo "#---------------------------------------------------"
	echo "# Stats for "$inputmap 
	echo "#---------------------------------------------------"
	$me print_stats $inputmap ${mask_dir}mask_fullsky_n${nside}_tqu.fits 
	echo "" 

    done
done
