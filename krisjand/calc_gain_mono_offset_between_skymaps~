#!/bin/bash

me=/mn/stornext/u3/hke/owl/quiet_svn/oslo/src/f90/map_editor/map_editor

if [ $# -ne 5 ] || [ "$1" = "help" ]; then
   echo ""
   echo "Syntax: calc_gain_mono_offset_between_skymaps [map label (pre band label)] [nside] [smoothing (arcmins)] [map label comparison] [comparison directory] "
   echo ""
   echo "e.g. calc_gain_mono_offset_between_skymaps npipe6v1 2048 40 npipe5v21 ../npipe5v21"
   echo ""
   exit
fi

map_label=$1
ns_HFI=$2
nside=$(printf "%04d" $2)

if [ $ns_HFI -eq 2048 ];then
    nside_LFI=1024
else
    ns_LFI=$ns_HFI
    nside_LFI=$(printf "%04d" $ns_HFI)
fi
arcmin=$3
comp_label=$4
if [ "${5:$((${#5}-1)):1}" = "/" ]; then
    comp_dir="${5:0:$((${#5}-1))}"
else
    comp_dir="${5}"
fi


freqs=("30" "44" "70" "100" "143" "217" "353" "545" "857")
#freqs=("545" "857")

masks=("commander_dx12_mask_n0256_likelihood_v2.fits"
    "commander_dx12_mask_n0512_likelihood_v2.fits"
    "commander_dx12_mask_n1024_likelihood_v2.fits"
    "commander_dx12_mask_n2048_likelihood_v2.fits")

masksfullsky=("mask_fullsky_n0256_tqu.fits"
    "mask_fullsky_n0512_tqu.fits"
    "mask_fullsky_n1024_tqu.fits"
    "mask_fullsky_n2048_tqu.fits")

mask_dir=/mn/stornext/u3/krisjand/stornext/npipe_highres/data_npipe

for ((i=0; i<${#freqs[@]}; i++)) ; do
    freq=${freqs[$i]} #Frequency
    
    if [ $freq -lt 100 ]; then
	ns=$ns_LFI
	in_str="${map_label}"*${freq}*"_n${nside_LFI}_${arcmin}arcmin"*".fits"
    else
	ns=$ns_HFI
	in_str="${map_label}"*${freq}*"_n${nside}_${arcmin}arcmin"*".fits"
    fi
    for inputmap in $in_str; do  # input maps (nside 256), with directory
	compmap=${inputmap/$map_label/$comp_label}
	compmap=$comp_dir/$compmap #Map to adjust to
	
	echo "----------------------------------------------------------------------------------"
	echo "Frequency: " ${freq}
	echo "Input map: " ${inputmap}
	echo "Comparing with: " ${compmap}
	echo "Using gain for dipole" $g
	echo "----------------------------------------------------------------------------------"

	if [ $ns -eq 256 ];then
	    j=0
	elif [ $ns -eq 512 ];then
	    j=1
	elif [ $ns -eq 1024 ];then
	    j=2
	elif [ $ns -eq 2048 ];then
	    j=3
	fi
	#-------------------- FIT GAIN OFFSET - GET GAIN AND OFFSET ----------------------
	$me fit_gain_offset_dipole ${compmap} ${inputmap} ${mask_dir}/${masksfullsky[$j]} ${mask_dir}/${masks[$j]} residual.fits 2>/dev/null > fit_gain_temp.txt #save output and ignore error

	# EXTRACT OFFSET OUTPUT
	tr -s '[:space:]' < fit_gain_temp.txt # Remove double spaces
	offset=($(tail -n 1 fit_gain_temp.txt | grep -oP '(?<=offset\ =\ ).*'))
	# EXTRACT GAIN OUTPUT
	gain=$(tail -n 1 fit_gain_temp.txt | grep -oP '(?<=gain\ =\ ).*(?=,)')
	gain=$(bc -l <<< "1/$gain") # 1/gain calculator

	echo "gain: $gain offset:  ${offset[0]} ${offset[1]} ${offset[2]} ${offset[3]}"

	offset=$(echo -"($offset)" | bc -l) # Invert offset

	rm fit_gain_temp.txt 2>/dev/null
	rm residual.fits 2>/dev/null

    done
done
