#!/bin/bash
map_editor=/mn/stornext/u3/hke/owl/quiet_svn/oslo/src/f90/map_editor/map_editor

freqs=("30" "44" "70" "100" "143" "217" "353" "545" "857")

npipe=("map_npipe4v207_v1_030_0256_40arcmin_full"
"map_npipe4v207_v1_044_0256_40arcmin_full"
"map_npipe4v207_v1_070_0256_40arcmin_full"
"map_npipe4v205_v1_100_0256_40arcmin_full"
"map_npipe4v205_v1_143_0256_40arcmin_full"
"map_npipe4v205_v1_217_0256_40arcmin_full"
"map_npipe4v205_v1_353_0256_40arcmin_full")

dx11=("map_dx11d_r2_bpc_030_0256_40arcmin_full"
"map_dx11d_r2_bpc_044_0256_40arcmin_full"
"map_dx11d_r2_bpc_070_0256_40arcmin_full"
"map_dx11d_r2_zbpcg_100_0256_40arcmin_full"
"map_dx11d_r2_zbpcg_143_0256_40arcmin_full"
"map_dx11d_r2_zbpcg_217_0256_40arcmin_full"
"map_dx11d_r2_zbpcg_353_0256_40arcmin_full"
"map_dx11d_r2_zc_545_0256_40arcmin_full"
"map_dx11d_r2_zc_857_0256_40arcmin_full")

dx12=("../dx12/map_dx12_bpc_v2_030_0256_40arcmin_full"
"../dx12/map_dx12_bpc_v2_044_0256_40arcmin_full"
"../dx12/map_dx12_bpc_v2_070_0256_40arcmin_full"
"../dx12/map_dx12_v2_100_0256_40arcmin_full"
"../dx12/map_dx12_v2_143_0256_40arcmin_full"
"../dx12/map_dx12_v2_217_0256_40arcmin_full"
"../dx12/map_dx12_v2_353_0256_40arcmin_full"
"../dx12/map_dx12_v2_545_0256_40arcmin_full"
"../dx12/map_dx12_v2_857_0256_40arcmin_full")

dx12hires=("LFI_SkyMap_030_1024_R3.00_bpcorrected_full"
"LFI_SkyMap_044_1024_R3.00_bpcorrected_full"
"LFI_SkyMap_070_1024_R3.00_bpcorrected_full"
"100GHz_ful.all_ful.RD12_RC4.P"
"143GHz_ful.all_ful.RD12_RC4.P"
"217GHz_ful.all_ful.RD12_RC4.P"
"353GHz_ful.all_ful.RD12_RC4.P")

npipehires=("npipe4v207_030_map"
"npipe4v207_044_map"
"npipe4v207_070_map"
"npipe4v205_100_map"
"npipe4v205_143_map"
"npipe4v205_217_map"
"npipe4v205_353_map")

masks=("commander_dx12_mask_n0256_likelihood_v2.fits"
"commander_dx12_mask_n1024_likelihood_v2.fits"
"commander_dx12_mask_n2048_likelihood_v2.fits")

masksfullsky=("mask_fullsky_n256.fits"
"mask_fullsky_n1024.fits"
"mask_fullsky_n2048.fits")

dipolemaps=()

read -p "input map: [npipe dx12 dx11] " inputmap
read -p "Adjustment map: [npipe dx12 dx11] " adjmap
read -p "Resolution: [hi/lo] " res

# If hires then:
if [[ $res == hi ]]; then
  if [[ $inputmap == npipe ]]; then
    inputmap=( "${npipehires[@]}" )
  elif [[ $inputmap == dx12 ]]; then
    inputmap=( "${dx12hires[@]}" )
  elif [[ $inputmap == dx11 ]]; then
    inputmap=( "${dx11hires[@]}" )
  else
    echo "Wrong input map"
    echo $inputmap
    exit
  fi

  if [[ $adjmap == npipe ]]; then
    adjmap=( "${npipehires[@]}" )
  elif [[ $adjmap == dx12 ]]; then
    adjmap=( "${dx12hires[@]}" )
  elif [[ $adjmap == dx11 ]]; then
    adjmap=( "${dx11hires[@]}" )
  else
    echo "Wrong adjustment map"
    echo $adjmap
    exit
  fi

else # LORES Versions
  if [[ $inputmap == npipe ]]; then
    inputmap=( "${npipe[@]}" )
  elif [[ $inputmap == dx12 ]]; then
    inputmap=( "${dx12[@]}" )
  elif [[ $inputmap == dx11 ]]; then
    inputmap=( "${dx11[@]}" )
  else
    echo "Wrong input map"
    echo $inputmap
    exit
  fi

  if [[ $adjmap == npipe ]]; then
    adjmap=( "${npipe[@]}" )
  elif [[ $adjmap == dx12 ]]; then
    adjmap=( "${dx12[@]}" )
  elif [[ $adjmap == dx11 ]]; then
    adjmap=( "${dx11[@]}" )
  else
    echo "Wrong adjustment map"
    echo $adjmap
    exit
  fi
fi

# Number of maps to correct
read -p "Correct all maps? [y/n, n for 30-353] " nmaps
if [[ $nmaps == y ]]; then
  rng=8
else
  rng=6
fi

read -p "Output map name extension [ex. MDCOR] " outputname

echo "Method 1:"
echo "Use fit_gain_offset_dipole and use output in subtract_mono_dipole"
echo "Method 2:"
echo "Calculate diff of maps and subtract MD with subtract_mono_dipole"

read -p "Which method [1. or 2.]" method
read -p "Would you like to scale your results? [factor, ex. 1e6] "
read -p "Got dipole maps? " gotdipoles
if [[ $method == 1 ]]; then # METHOD 1
  for ((i=0; i<=$rng; i++)) ; do
    echo "----------------------------------------------------------------------------------"
    echo ${freqs[$i]} "GHz map"
    echo "Input map: "${inputmap[$i]}
    echo "Adjusting with: " ${adjmap[$i]}
    echo "----------------------------------------------------------------------------------"
    if [[ $res == hi ]]; then #Adjust masks for hires
      if [ $i -lt 3 ];
      then
    	   j=1
      else
    	   j=2
      fi
    else
      j=0
    fi
    $map_editor fit_gain_offset_dipole ${adjmap[$i]}.fits ${inputmap[$i]}.fits ${masksfullsky[$j]} ${masks[$j]} residual.fits 2>/dev/null > fit_gain_temp.txt #save output and ignore error
    #$map_editor fit_gain_offset_dipole "../dx12/map_dx12_bpc_v2_030_0256_40arcmin_full.fits" "map_npipe4v207_v1_030_0256_40arcmin_full.fits" "mask_fullsky_n256.fits" "commander_dx12_mask_n0256_likelihood_v2.fits" residual.fits 2>/dev/null > fit_gain_temp.txt #sav
    # EXTRACT OFFSET OUTPUT
    #tr -s '[:space:]' < fit_gain_temp.txt # Remove double spaces
    offset=$(tail -n 1 fit_gain_temp.txt | grep -oP '(?<=offset\ =\ ).*')
    # EXTRACT GAIN OUTPUT
    gain=$(tail -n 1 fit_gain_temp.txt | grep -o -P '(?<=gain\ =\ ).*(?=,)')
    gain=$(bc -l <<< "1/$gain")

    echo "gain: $gain offset:  $offset"

    if [[ $scale ]]; then
      gain=$(bc -l <<< "$scale*$gain")
    fi

    if [[ $gotdipoles ]]; then
      $map_editor subtract ${inputmap[$i]}".fits" $dipolemaps ${inputmap[$i]}"_"$outputname".fits"
    else
      $map_editor subtract_mono_dipole ${inputmap[$i]}".fits" ${masks[$j]} ${inputmap[$i]}"_"$outputname".fits" $offset
    fi

    $map_editor scale ${inputmap[$i]}"_"$outputname".fits" ${inputmap[$i]}"_"$outputname".fits" $gain

    rm fit_gain_temp.txt 2>/dev/null
    rm residual.fits 2>/dev/null
  done
elif [[ $method == 2 ]]; then # METHOD 2
  for ((i=0; i<=$rng; i++)) ; do
    echo "----------------------------------------------------------------------------------"
    echo ${freqs[$i]} "GHz map"
    echo "Input map: "${inputmap[$i]}
    echo "Adjusting with: " ${adjmap[$i]}
    echo "----------------------------------------------------------------------------------"

    if [[ $res == hi ]]; then #Adjust masks for hires
      if [ $i -lt 3 ];
      then
    	   j=1
      else
    	   j=2
      fi
    else
      j=0
    fi

    # Do correction
    $map_editor subtract ${inputmap[$i]}".fits" ${adjmap[$i]}".fits" diff.fits
    $map_editor subtract_mono_dipole diff.fits ${masks[$j]} correct.fits
    $map_editor subtract diff.fits correct.fits mono.fits
    $map_editor subtract ${inputmap[$i]}".fits" mono.fits ${inputmap[$i]}"_"$outputname".fits"
    $map_editor scale ${inputmap[$i]}"_"$outputname".fits" ${inputmap[$i]}"_"$outputname".fits" 1e6

    # Make plots
    if [ $i -lt 7 ]; then
      map2png ${inputmap[$i]}"_"$outputname".fits" -bar -range 250
    else
      map2png ${inputmap[$i]}"_"$outputname".fits" -bar -range 10
    fi

    # Remove maps
    rm diff.fits
    rm correct.fits
    rm mono.fits
done
fi
